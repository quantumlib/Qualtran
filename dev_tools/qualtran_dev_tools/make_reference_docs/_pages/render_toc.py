#  Copyright 2025 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
from typing import Callable, List, Sequence

from .._page import ModulePage, Page
from .._render_context import RenderContext


def write_toc(toc_f, pages, _page_in_section, _pages_sort_key, render_context: RenderContext):
    toc_f.write(".. this file is autogenerated\n\n")

    for section in render_context.sections:
        if section == '':
            raise ValueError()
        toc_f.write('.. toctree::\n')
        # toc_f.write(f'   :hidden:\n')
        toc_f.write(f'   :caption: {section}\n')
        toc_f.write('   :maxdepth: 2\n\n')

        spages: List[Page] = sorted(
            (p for p in pages if _page_in_section(p, section)), key=_pages_sort_key
        )

        for mp in spages:
            if isinstance(mp, ModulePage) and len(mp.members) == 0:
                print(f"Skipping empty module page {mp.pref_path}")
                continue

            assert mp.pref_path is not None, f'Uninitialized {mp}'
            mp_relpath = mp.pref_path.split('.')
            mp_relpath = mp_relpath[:-1] + [f'{mp_relpath[-1]}.md']
            mp_relpath = '/'.join(mp_relpath)
            mp_relpath = render_context.refdoc_relpath / mp_relpath
            toc_f.write(f'   /{mp_relpath}\n')

        toc_f.write('\n')


def render_toc(
    out_dir,
    pages: Sequence[Page],
    page_in_section: Callable,
    pages_sort_key: Callable,
    render_context: RenderContext,
):
    toc_f = (out_dir / 'autotoc.rst.inc').open('w')
    write_toc(
        toc_f=toc_f,
        pages=pages,
        _page_in_section=page_in_section,
        _pages_sort_key=pages_sort_key,
        render_context=render_context,
    )
    toc_f.close()
