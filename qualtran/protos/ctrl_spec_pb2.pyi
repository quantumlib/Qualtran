"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2024 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import qualtran.protos.args_pb2
import qualtran.protos.data_types_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CtrlSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QDTYPE_FIELD_NUMBER: builtins.int
    CVS_FIELD_NUMBER: builtins.int
    @property
    def qdtype(self) -> qualtran.protos.data_types_pb2.QDataType: ...
    @property
    def cvs(self) -> qualtran.protos.args_pb2.NDArray: ...
    def __init__(
        self,
        *,
        qdtype: qualtran.protos.data_types_pb2.QDataType | None = ...,
        cvs: qualtran.protos.args_pb2.NDArray | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cvs", b"cvs", "qdtype", b"qdtype"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cvs", b"cvs", "qdtype", b"qdtype"]) -> None: ...

global___CtrlSpec = CtrlSpec
