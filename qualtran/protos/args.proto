/*
  Copyright 2023 Google LLC

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

syntax = "proto3";

package qualtran;

message IntOrSympy {
  oneof val {
    int64 int_val = 1;
    string sympy_expr = 2;
  }
}

message NDArray {
  // A flattened numpy array. Let `a` be a numpy array. It should be serialized / deserialized as:
  // >>> shape, dtype, data = a.shape, a.dtype, a.tobytes()
  // >>> arr = np.ndarray(shape, dtype, data)
  repeated int32 shape = 1;
  string dtype = 2;
  bytes data = 3;
}

message BloqArg {
  string name = 1;
  oneof val {
    int64 int_val = 2;
    double float_val = 3;
    string string_val = 4;
    // Sympy expression generated using str(expr).
    string sympy_expr = 5;
    // N-dimensional numpy array stored as bytes.
    NDArray ndarray = 6;
    // Integer reference of a subbloq. Assumes access to a BloqLibrary.
    int32 subbloq = 7;
    // Gzipped JSON corresponding to a Cirq object.
    bytes cirq_json_gzip = 8;
  }
}

